@page "/create-support"
@using SupportApp.Models
@inject ISupportService SupportService

<h3>Opret supporthenvendelse</h3>

<EditForm Model="supportModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>Navn</label>
        <InputText class="form-control" @bind-Value="supportModel.Customer.Name" />
    </div>

    <div class="mb-3">
        <label>Email</label>
        <InputText class="form-control" @bind-Value="supportModel.Customer.Email" />
    </div>

    <div class="mb-3">
        <label>Telefon</label>
        <InputText class="form-control" @bind-Value="supportModel.Customer.Phone" />
    </div>

    <div class="mb-3">
        <label>Kategori</label>
        <InputText class="form-control" @bind-Value="supportModel.Category" />
    </div>

    <div class="mb-3">
        <label>Beskrivelse</label>
        <InputTextArea class="form-control" @bind-Value="supportModel.Description" />
    </div>

    <button class="btn btn-primary" type="submit" disabled="@isSubmitting">Send henvendelse</button>
</EditForm>

@if (saved)
{
    <div class="alert alert-success mt-3">Henvendelse oprettet!</div>
}

@code {
    private SupportMessage supportModel = new()
    {
        Customer = new CustomerInfo(),
        CreatedAt = DateTime.UtcNow
    };

    private bool saved = false;
    private bool isSubmitting = false;

    private async Task HandleValidSubmit()
    {
        isSubmitting = true;
        supportModel.CreatedAt = DateTime.UtcNow;

        await SupportService.AddSupportMessageAsync(supportModel);

        saved = true;
        supportModel = new SupportMessage
        {
            Customer = new CustomerInfo(),
            CreatedAt = DateTime.UtcNow
        };

        isSubmitting = false;
    }
}
